#################################
# compiler and compiling profile
#################################
FCOMP=INTEL                  # options: NVIDIA, INTEL, GNU
FFLAGS_OPT=1                 # for production runs
FFLAGS_OPT_MAX=0             # for production runs (more aggressive optimization)
FFLAGS_DEBUG=0               # for debugging
FFLAGS_DEBUG_MAX=0           # for thorough debugging
#################################  
# defines                    
#################################
DEBUG=0                      # best = 1 (no significant performance penalty)
TIMING=0                     # best = 1
IMPDIFF=0                    #
IMPDIFF_1D=0                 #
PENCIL_AXIS=3                # = 1/2/3 for X/Y/Z-aligned pencils
SINGLE_PRECISION=1           # typically not a good idea to change
SINGLE_PRECISION_POISSON=0   # single precision Poisson
#################################
# GPU-related                
#################################
GPU=0                        
USE_NVTX=0                   # use the NVTX-enabled Git branch 'with-nvtx' to see the markers
#################################                       
# Code functionality         
#################################
GRIDPOINT_NATURAL_CHANNEL=0  # use physics-based natural grid-stretching function for wall-normal coordinates
#
IBM=0                        # enable immersed boundary method
SYMMETRIC=0                     # Surfaces on both boundaries 
SIMPLE=0                        # Breugem & Boersma's method for grid-conforming geometries
VOLUME=0                        # volume penalization method for complex geometries
IBM_BC=0                         # ghost-cell method for imposing Neumann boundary conditions (only applies to VOLUME)
FORCE_FLUID_ONLY=0               # Only apply forcing in fluid regions
#
HEAT_TRANSFER=0              # solve heat equation
WENO=0                          # use WENO5 scheme
BOUSSINESQ=0                    # boussinesq approximation for buoyancy
ISOTHERMAL=0                    # impose isothermal condition in immersed regions (Only applies to SIMPLE IBM)
#
LPP_CPU=0                    # lagrangian point particles, CPU version
LPP_GPU=0                    # lagrangian point particles, GPU version (partially)